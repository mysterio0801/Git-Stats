{"ast":null,"code":"var _jsxFileName = \"/home/vrishabh/Projects/git-stats-master/src/components/charts/DaysStats.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { css } from '@emotion/core';\nconst override = css`\n    display: block;\n    margin: 0 auto;\n`;\n\nconst DayStats = props => {\n  const [events, setEvents] = useState([]);\n  const [prodDays, setProdDays] = useState({\n    firstDay: ''\n  });\n  const [prodTime, setProdTime] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  const [Days, setDays] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [Time, setTime] = useState({\n    a: [],\n    b: [],\n    c: [],\n    d: [],\n    e: [],\n    f: []\n  });\n  const [TimebgColor, setBg] = useState();\n  useEffect(() => {\n    var ev = [];\n\n    if (props.events.length > 0) {\n      props.events.forEach(res => {\n        ev.push(res);\n      });\n    }\n\n    setEvents(ev);\n  }, [props]);\n\n  const dispEvents = events => {\n    if (events.length > 0 && loaded === false) {\n      var DayName = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n      var daysArray = [];\n      var timeArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      var Mon = 0,\n          Tue = 0,\n          Wed = 0,\n          Thur = 0,\n          Fri = 0,\n          Sat = 0,\n          Sun = 0;\n      events.forEach(res => {\n        var day = new Date(res.created_at);\n        var hours = day.getHours();\n        day = day.toUTCString();\n        day = day.slice(0, 3);\n        timeArray[hours]++;\n\n        switch (day) {\n          case \"Mon\":\n            Mon++;\n            break;\n\n          case \"Tue\":\n            Tue++;\n            break;\n\n          case \"Wed\":\n            Wed++;\n            break;\n\n          case \"Thu\":\n            Thur++;\n            break;\n\n          case \"Fri\":\n            Fri++;\n            break;\n\n          case \"Sat\":\n            Sat++;\n            break;\n\n          case \"Sun\":\n            Sun++;\n            break;\n\n          default:\n            break;\n        }\n      });\n      [Mon, Tue, Wed, Thur, Fri, Sat, Sun].forEach(data => {\n        daysArray.push(data);\n      });\n      var sum = Mon + Tue + Wed + Thur + Fri + Sat + Sun;\n      setDays([(Mon / sum * 100).toFixed(2), (Tue / sum * 100).toFixed(2), (Wed / sum * 100).toFixed(2), (Thur / sum * 100).toFixed(2), (Fri / sum * 100).toFixed(2), (Sat / sum * 100).toFixed(2), (Sun / sum * 100).toFixed(2)]);\n      var arr1 = [Mon, Tue, Wed, Thur, Fri, Sat, Sun];\n      var max1 = arr1.reduce(function (a, b) {\n        return Math.max(a, b);\n      });\n      var index1;\n\n      for (let i = 0; i < arr1.length; i++) {\n        if (max1 === arr1[i]) {\n          index1 = i;\n          break;\n        }\n      }\n\n      setProdDays({\n        firstDay: DayName[index1]\n      });\n      var i = 0;\n      var sum = 0;\n      timeArray.forEach(data => {\n        sum = sum + data;\n      });\n      timeArray.forEach(data => {\n        data = data / sum * 100;\n        timeArray[i] = data.toFixed(2);\n        i++;\n      });\n      var bgArray = ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 1, 64, 0.2)'];\n      var a1 = [];\n      var a2 = [];\n      var a3 = [];\n      var a4 = [];\n      var a5 = [];\n      var a6 = [];\n\n      for (let i = 0; i < timeArray.length; i++) {\n        if (i % 6 === 0) {\n          a1.push(timeArray[i]);\n        } else if (i % 6 === 1) {\n          a2.push(timeArray[i]);\n        } else if (i % 6 === 2) {\n          a3.push(timeArray[i]);\n        } else if (i % 6 === 3) {\n          a4.push(timeArray[i]);\n        } else if (i % 6 === 4) {\n          a5.push(timeArray[i]);\n        } else if (i % 6 === 5) {\n          a6.push(timeArray[i]);\n        }\n      } // Calculating max productive time in day\n\n\n      let max_sum = 0;\n      let max_sum_index = -1;\n\n      for (let i = 0; i < 4; i++) {\n        const h_sum = Number(a1[i]) + Number(a2[i]) + Number(a3[i]) + Number(a4[i]) + Number(a5[i]) + Number(a6[i]);\n\n        if (h_sum > max_sum) {\n          max_sum_index = i;\n          max_sum = h_sum;\n        }\n      }\n\n      const h_array = [\"Night\", \"Morning\", \"Daytime\", \"Evening\"];\n      setProdTime(h_array[max_sum_index]);\n      setBg(bgArray);\n      setTime({\n        a: a1,\n        b: a2,\n        c: a3,\n        d: a4,\n        e: a5,\n        f: a6\n      });\n      setLoaded(true);\n    } else {\n      return;\n    }\n  };\n\n  const getContent = (Days, loaded, prodDays, prodTime, Time, TimebgColor, override) => {\n    if (loaded === true) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"charts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, loaded === true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 48\n        }\n      }, \"Most productive on \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 98\n        }\n      }, \" \", prodDays.firstDay), \" in recent Days.\"), loaded === true && /*#__PURE__*/React.createElement(Bar, {\n        data: {\n          datasets: [{\n            label: \"Contribution %\",\n            data: Days,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 1, 64, 0.2)']\n          }],\n          labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n        },\n        options: {\n          animation: {\n            duration: 3000,\n            easing: 'easeInOutQuint'\n          },\n          title: {\n            text: \"Daywise Contribution\",\n            position: 'bottom',\n            display: true\n          },\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              ticks: {\n                autoSkip: true\n              },\n              gridLines: {\n                display: false\n              }\n            }],\n            yAxes: [{\n              display: false\n            }]\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 48\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"charts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, loaded === true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 48\n        }\n      }, \"Most productive during \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 102\n        }\n      }, prodTime), \" in recent Days.\"), loaded === true && /*#__PURE__*/React.createElement(Bar, {\n        data: {\n          datasets: [{\n            label: \"Contribution % \",\n            data: Time.a,\n            backgroundColor: TimebgColor\n          }, {\n            label: \"Contribution % \",\n            data: Time.b,\n            backgroundColor: TimebgColor\n          }, {\n            label: \"Contribution % \",\n            data: Time.c,\n            backgroundColor: TimebgColor\n          }, {\n            label: \"Contribution % \",\n            data: Time.d,\n            backgroundColor: TimebgColor\n          }, {\n            label: \"Contribution % \",\n            data: Time.e,\n            backgroundColor: TimebgColor\n          }, {\n            label: \"Contribution % \",\n            data: Time.f,\n            backgroundColor: TimebgColor\n          }],\n          labels: [\"Night\", \"Morning\", \"Daytime\", \"Evening\"]\n        },\n        options: {\n          animation: {\n            duration: 3000,\n            easing: 'easeInOutQuint'\n          },\n          title: {\n            display: true,\n            text: \"Timewise Contribution\"\n          },\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              categoryPercentage: 1,\n              barPercentage: 0.9,\n              gridLines: {\n                display: false\n              }\n            }],\n            yAxes: [{\n              barPercentage: 0.9,\n              categoryPercentage: 1,\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                display: false\n              }\n            }]\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 48\n        }\n      }))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dispEvents(events), getContent(Days, loaded, prodDays, prodTime, Time, TimebgColor, override));\n};\n\nexport default DayStats;","map":{"version":3,"sources":["/home/vrishabh/Projects/git-stats-master/src/components/charts/DaysStats.js"],"names":["React","useState","useEffect","Bar","css","override","DayStats","props","events","setEvents","prodDays","setProdDays","firstDay","prodTime","setProdTime","loaded","setLoaded","Days","setDays","Time","setTime","a","b","c","d","e","f","TimebgColor","setBg","ev","length","forEach","res","push","dispEvents","DayName","daysArray","timeArray","Mon","Tue","Wed","Thur","Fri","Sat","Sun","day","Date","created_at","hours","getHours","toUTCString","slice","data","sum","toFixed","arr1","max1","reduce","Math","max","index1","i","bgArray","a1","a2","a3","a4","a5","a6","max_sum","max_sum_index","h_sum","Number","h_array","getContent","datasets","label","backgroundColor","labels","animation","duration","easing","title","text","position","display","legend","scales","xAxes","ticks","autoSkip","gridLines","yAxes","categoryPercentage","barPercentage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { css } from '@emotion/core';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n`;\n\nconst DayStats = (props) => {\n\n    const [events, setEvents] = useState([]);\n    const [prodDays, setProdDays] = useState({\n        firstDay: ''\n    });\n    const [prodTime, setProdTime] = useState('');\n    const [loaded, setLoaded] = useState(false);\n    const [Days, setDays] = useState([0, 0, 0, 0, 0, 0, 0])\n    const [Time, setTime] = useState({\n        a: [],\n        b: [],\n        c: [],\n        d: [],\n        e: [],\n        f: []\n    });\n    const [TimebgColor, setBg] = useState();\n\n    useEffect(() => {\n        var ev = [];\n        if (props.events.length > 0) {\n            props.events.forEach(res => {\n                ev.push(res);\n            });\n        }\n        setEvents(ev);\n    }, [props]);\n\n    const dispEvents = (events) => {\n\n        if (events.length > 0 && loaded === false) {\n            var DayName = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n            var daysArray = []\n            var timeArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            var Mon = 0, Tue = 0, Wed = 0, Thur = 0, Fri = 0, Sat = 0, Sun = 0;\n            events.forEach(res => {\n                var day = new Date(res.created_at);\n                var hours = day.getHours();\n                day = day.toUTCString();\n                day = day.slice(0, 3);\n                timeArray[hours]++;\n                switch (day) {\n                    case \"Mon\":\n                        Mon++;\n                        break;\n                    case \"Tue\":\n                        Tue++;\n                        break;\n                    case \"Wed\":\n                        Wed++;\n                        break;\n                    case \"Thu\":\n                        Thur++;\n                        break;\n                    case \"Fri\":\n                        Fri++;\n                        break;\n                    case \"Sat\":\n                        Sat++;\n                        break;\n                    case \"Sun\":\n                        Sun++;\n                        break;\n                    default:\n                        break;\n                }\n            });\n            [Mon, Tue, Wed, Thur, Fri, Sat, Sun].forEach((data) => {\n                daysArray.push(data);\n            })\n            var sum = Mon + Tue + Wed + Thur + Fri + Sat + Sun;\n            setDays([((Mon / sum) * 100).toFixed(2), ((Tue / sum) * 100).toFixed(2), ((Wed / sum) * 100).toFixed(2), ((Thur / sum) * 100).toFixed(2), ((Fri / sum) * 100).toFixed(2), ((Sat / sum) * 100).toFixed(2), ((Sun / sum) * 100).toFixed(2)]);\n            var arr1 = [Mon, Tue, Wed, Thur, Fri, Sat, Sun];\n            var max1 = arr1.reduce(function (a, b) {\n                return Math.max(a, b);\n            });\n            var index1;\n            for (let i = 0; i < arr1.length; i++) {\n                if (max1 === arr1[i]) {\n                    index1 = i;\n                    break;\n                }\n            }\n            setProdDays({\n                firstDay: DayName[index1]\n            });\n            var i = 0;\n            var sum = 0;\n            timeArray.forEach(data => {\n                sum = sum + data;\n            });\n            timeArray.forEach(data => {\n                data = (data / sum) * 100;\n                timeArray[i] = data.toFixed(2);\n                i++;\n            });\n            var bgArray = ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 1, 64, 0.2)'];\n            var a1 = [];\n            var a2 = [];\n            var a3 = [];\n            var a4 = [];\n            var a5 = [];\n            var a6 = [];\n            for (let i = 0; i < timeArray.length; i++) {\n                if (i % 6 === 0) {\n                    a1.push(timeArray[i]);\n                }\n                else if (i % 6 === 1) {\n                    a2.push(timeArray[i]);\n                }\n                else if (i % 6 === 2) {\n                    a3.push(timeArray[i]);\n                }\n                else if (i % 6 === 3) {\n                    a4.push(timeArray[i]);\n                }\n                else if (i % 6 === 4) {\n                    a5.push(timeArray[i]);\n                }\n                else if (i % 6 === 5) {\n                    a6.push(timeArray[i]);\n                }\n            }\n            // Calculating max productive time in day\n            let max_sum = 0;\n            let max_sum_index = -1;\n            for (let i = 0; i < 4; i++) {\n                const h_sum = Number(a1[i]) + Number(a2[i]) + Number(a3[i]) + Number(a4[i]) + Number(a5[i]) + Number(a6[i]);\n                if (h_sum > max_sum) {\n                    max_sum_index = i;\n                    max_sum = h_sum;\n                }\n            }\n            const h_array = [\"Night\", \"Morning\", \"Daytime\", \"Evening\"];\n            setProdTime(h_array[max_sum_index]);\n\n            setBg(bgArray);\n            setTime({\n                a: a1,\n                b: a2,\n                c: a3,\n                d: a4,\n                e: a5,\n                f: a6\n            });\n\n\n            setLoaded(true);\n        }\n        else {\n            return;\n        }\n    }\n\n    const getContent = (Days, loaded, prodDays, prodTime, Time, TimebgColor, override) => {\n        if (loaded === true) {\n            return (\n                <><>\n                    <div className=\"charts\">\n                        {\n                            loaded === true && <div className=\"chart-heading\">Most productive on <span> {prodDays.firstDay}</span> in recent Days.</div>\n                        }\n                        {\n                            loaded === true && <Bar data={{\n                                datasets: [{\n                                    label: \"Contribution %\",\n                                    data: Days,\n                                    backgroundColor: [\n                                        'rgba(255, 99, 132, 0.2)',\n                                        'rgba(54, 162, 235, 0.2)',\n                                        'rgba(255, 206, 86, 0.2)',\n                                        'rgba(75, 192, 192, 0.2)',\n                                        'rgba(153, 102, 255, 0.2)',\n                                        'rgba(255, 159, 64, 0.2)',\n                                        'rgba(255, 1, 64, 0.2)'\n                                    ]\n                                }],\n                                labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n                            }} options={{\n                                animation: {\n                                    duration: 3000,\n                                    easing: 'easeInOutQuint',\n                                },\n                                title: {\n                                    text: \"Daywise Contribution\",\n                                    position: 'bottom',\n                                    display: true\n                                },\n                                legend: {\n                                    display: false\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        ticks: {\n                                            autoSkip: true\n                                        },\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        display: false\n                                    }]\n                                }\n                            }} />\n                        }\n\n\n                    </div>\n                    <div className=\"charts\">\n                        {\n                            loaded === true && <div className=\"chart-heading\">Most productive during <span>{prodTime}</span> in recent Days.</div>\n                        }\n                        {\n                            loaded === true && <Bar data={{\n                                datasets: [{\n                                    label: \"Contribution % \",\n                                    data: Time.a,\n                                    backgroundColor: TimebgColor,\n                                },\n                                {\n                                    label: \"Contribution % \",\n                                    data: Time.b,\n                                    backgroundColor: TimebgColor,\n                                },\n                                {\n                                    label: \"Contribution % \",\n                                    data: Time.c,\n                                    backgroundColor: TimebgColor\n                                },\n                                {\n                                    label: \"Contribution % \",\n                                    data: Time.d,\n                                    backgroundColor: TimebgColor\n                                },\n                                {\n                                    label: \"Contribution % \",\n                                    data: Time.e,\n                                    backgroundColor: TimebgColor\n                                },\n                                {\n                                    label: \"Contribution % \",\n                                    data: Time.f,\n                                    backgroundColor: TimebgColor\n                                },\n                                ],\n                                labels: [\"Night\", \"Morning\", \"Daytime\", \"Evening\"],\n                            }} options={{\n                                animation: {\n                                    duration: 3000,\n                                    easing: 'easeInOutQuint',\n                                },\n                                title: {\n                                    display: true,\n                                    text: \"Timewise Contribution\"\n                                },\n                                legend: {\n                                    display: false,\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        categoryPercentage: 1,\n                                        barPercentage: 0.9,\n                                        gridLines: {\n                                            display: false\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        barPercentage: 0.9,\n                                        categoryPercentage: 1,\n                                        gridLines: {\n                                            display: false\n                                        },\n                                        ticks: {\n                                            display: false\n                                        }\n                                    }]\n                                }\n                            }} />\n                        }\n                    </div>\n                </></>\n            )\n        }\n    }\n\n    return (\n        <>\n            {dispEvents(events)}\n            {getContent(Days, loaded, prodDays, prodTime, Time, TimebgColor, override)}\n        </>\n    )\n\n}\n\nexport default DayStats"]},"metadata":{},"sourceType":"module"}