{"ast":null,"code":"var _jsxFileName = \"/home/vrishabh/Projects/git-stats-master/src/components/Stats.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction Stats(props) {\n  const [lastDate, setLastDate] = useState('');\n  const [load, setLoad] = useState(false);\n  const [statsData, setStats] = useState({\n    commitNo: 0,\n    forkNo: 0,\n    prNo: 0,\n    followers: 0,\n    following: 0,\n    rePos: 0\n  });\n  useEffect(() => {\n    if (props.events.length > 0) {\n      getStats(props);\n    }\n  }, []);\n\n  const getStats = props => {\n    var commits = 0;\n    var forks = 0;\n    var pr = 0;\n    var userName = props.userName.login;\n    props.events.forEach(res => {\n      if (res.type === \"PushEvent\") {\n        commits = res.payload.size + commits;\n      }\n\n      if (res.type === \"ForkEvent\") {\n        forks++;\n      }\n\n      if (res.type === \"PullRequestEvent\" && res.actor.login === userName && res.payload.action === \"opened\") {\n        pr++;\n      }\n    });\n    setStats({\n      commitNo: commits,\n      forkNo: forks,\n      prNo: pr,\n      followers: props.stats.followers,\n      following: props.stats.following,\n      rePos: props.stats.repos\n    });\n    setLoad(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, load === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Public commits : \", statsData.commitNo), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Followers :     \", statsData.followers), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Forks :   \", statsData.forkNo), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Followings :    \", statsData.following), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"PRs :     \", statsData.prNo), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Public Repositories :  \", statsData.rePos)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lastDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Contribution Statistics are from \", props.lastDate));\n}\n\nexport default Stats;","map":{"version":3,"sources":["/home/vrishabh/Projects/git-stats-master/src/components/Stats.js"],"names":["React","useState","useEffect","Stats","props","lastDate","setLastDate","load","setLoad","statsData","setStats","commitNo","forkNo","prNo","followers","following","rePos","events","length","getStats","commits","forks","pr","userName","login","forEach","res","type","payload","size","actor","action","stats","repos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Stats(props) {\n\n    const [lastDate, setLastDate] = useState('');\n    const [load, setLoad] = useState(false);\n    const [statsData, setStats] = useState({\n        commitNo: 0,\n        forkNo: 0,\n        prNo: 0,\n        followers: 0,\n        following: 0,\n        rePos: 0\n    });\n\n    useEffect(() => {\n        if (props.events.length > 0) {\n            getStats(props);\n        }\n    }, []);\n\n    const getStats = (props) => {\n        var commits = 0;\n        var forks = 0;\n        var pr = 0;\n        var userName = props.userName.login;\n        props.events.forEach(res => {\n            if (res.type === \"PushEvent\") {\n                commits = res.payload.size + commits;\n            }\n            if (res.type === \"ForkEvent\") {\n                forks++;\n            }\n            if (res.type === \"PullRequestEvent\" && res.actor.login === userName && res.payload.action === \"opened\") {\n                pr++;\n            }\n        });\n        setStats({\n            commitNo: commits,\n            forkNo: forks,\n            prNo: pr,\n            followers: props.stats.followers,\n            following: props.stats.following,\n            rePos: props.stats.repos\n        });\n        setLoad(true);\n    }\n\n    return (\n        <>\n\n            {\n                load === true && <div className=\"header-stats\">\n                    <div>Public commits : {statsData.commitNo}</div>\n                    <div>Followers :     {statsData.followers}</div>\n                    <div>Forks :   {statsData.forkNo}</div>\n                    <div>Followings :    {statsData.following}</div>\n                    <div>PRs :     {statsData.prNo}</div>\n                    <div>Public Repositories :  {statsData.rePos}</div>\n                </div>\n            }\n            <div className=\"lastDate\">Contribution Statistics are from {props.lastDate}</div>\n        </>\n    )\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}